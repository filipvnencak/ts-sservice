{"version":3,"sources":["./src/app/resort/resort-routing.module.ts","./src/app/resort/resort.module.ts","./src/app/resort/resort.page.ts","./src/app/services/weather.service.ts","./src/app/resort/resort.page.scss","./src/app/resort/resort.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oDAAU;KACtB;CACF,CAAC;IAMW,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBK;AACM;AACF;AAEA;AAEqB;AAEvB;IAW9B,gBAAgB,SAAhB,gBAAgB;CAAG;AAAnB,gBAAgB;IAT5B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,2EAAuB;SACxB;QACD,YAAY,EAAE,CAAC,oDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBqB;AACD;AAEY;AACA;IAQhD,UAAU,SAAV,UAAU;IAMrB,YAA8B,aAA6B,EACnD,cAA8B,EAAU,cAA8B;QADhD,kBAAa,GAAb,aAAa,CAAgB;QACnD,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAE9E,CAAC;IAGD,QAAQ;QACN,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClE,CAAC;IAEH,gBAAgB;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC;IAEnB,CAAC;IAED,WAAW;QAET,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,GAAG,GAAE;YACrD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEjB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;CAGA;;YAzCQ,qEAAc;YAFd,2DAAc;YAGd,qEAAc;;AAQV,UAAU;IALtB,wDAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,2EAAiC;;KAElC,CAAC;GACW,UAAU,CAgCtB;AAhCsB;;;;;;;;;;;;;;;;;;;;;;;ACZoB;AACO;AACS;AACR;AACF;IAKpC,cAAc,SAAd,cAAc;IAKzB,YAAoB,IAAgB,EAAW,OAAuB,EAAU,cAA8B;QAA1F,SAAI,GAAJ,IAAI,CAAY;QAAW,YAAO,GAAP,OAAO,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAFtG,UAAK,GAAG,QAAQ,CAAC;QACjB,YAAO,GAAG,yCAAyC,CAAC;IACsD,CAAC;IAGnH,iBAAiB;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,IAAI,CAAC,OAAO,+BAA+B,4EAAkB,EAAE,CAAC,CAAC;IAChG,CAAC;CAGA;;YArBQ,4DAAU;YAEV,4DAAc;YACd,2DAAc;;AAKV,cAAc;IAH1B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAa1B;AAb0B;;;;;;;;;;;;;;;;ACT3B,iEAAe,oBAAoB,YAAY,sBAAsB,GAAG,oBAAoB,kBAAkB,wBAAwB,4BAA4B,GAAG,6CAA6C,2bAA2b,E;;;;;;;;;;;;;;;ACA7oB,iEAAe,4PAA4P,cAAc,oIAAoI,eAAe,+QAA+Q,ijCAAijC,E","file":"src_app_resort_resort_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResortPage } from './resort.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResortPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResortPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResortPageRoutingModule } from './resort-routing.module';\n\nimport { ResortPage } from './resort.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ResortPageRoutingModule\n  ],\n  declarations: [ResortPage]\n})\nexport class ResortPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { appInitialize } from '@ionic/angular/app-initialize';\nimport { ResortsService } from '../services/resorts.service';\nimport { WeatherService } from '../services/weather.service';\n\n\n@Component({\n  selector: 'app-resort',\n  templateUrl: './resort.page.html',\n  styleUrls: ['./resort.page.scss'],\n})\nexport class ResortPage implements OnInit {\n\n  Resorts: any;\n  currentWeather: any[];\n\n  \n  constructor( private readonly ResortService: ResortsService,\n  private activatedRoute: ActivatedRoute, private weatherService: WeatherService) {  \n  \n  }\n\n\n  ngOnInit() {\n    let resortId = this.activatedRoute.snapshot.paramMap.get(\"id\");\n    this.Resorts = this.ResortService.getResort(parseInt(resortId));\n  }\n  \nionViewWillEnter() {\nthis.loadWeather();\n\n}\n\nloadWeather() {\n\n  this.weatherService.getCurrentWeather().subscribe(res=>{\n    console.log(res);\n\n    this.currentWeather = res;\n  }) \n}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ResortsService } from './resorts.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  place: string;\n  private units = 'metric';\n  private baseURL = 'https://api.openweathermap.org/data/2.5';\n  constructor(private http: HttpClient,  private resorts: ResortsService, private activatedRoute: ActivatedRoute) { }\n \n\n  getCurrentWeather(){\nreturn this.http.get<any[]>(`${this.baseURL}/weather?q=this.place&appid=${environment.apiKey}`);\n}\n\n\n}\n","export default \"@charset \\\"UTF-8\\\";\\nion-card {\\n  margin-top: á, vw;\\n}\\nion-grid ion-row {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29ydC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQ2hCO0VBQ0ksaUJBQUE7QUFDSjtBQUVBO0VBQ0ksYUFBQTtFQUNKLG1CQUFBO0VBQ0EsdUJBQUE7QUFDQSIsImZpbGUiOiJyZXNvcnQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pb24tY2FyZCB7XG4gICAgbWFyZ2luLXRvcDogw6Esdnc7XG59XG5cbmlvbi1ncmlkIGlvbi1yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG5hbGlnbi1pdGVtczogY2VudGVyO1xuanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59Il19 */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n     <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref=\\\"tabs/resorts\\\"></ion-back-button>\\n      </ion-buttons>\\n    </ion-buttons>\\n    <ion-title>{{Resorts.name}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-item-center\\\"> \\n  <ion-img  src=\\\"assets/images/Photos/{{Resorts.cover}}.jpg\\\"></ion-img>  \\n  <ion-card >\\n    \\n  <ion-item lines= \\\"none\\\">\\n    <ion-card-subtitle color=\\\"primary\\\">Weather</ion-card-subtitle>\\n   </ion-item> \\n   <ion-item lines= \\\"none\\\">\\n     <ion-grid>\\n      <ion-row class=\\\"ion-text-center\\\" style=\\\"font-size: 3vw;\\\" >\\n        <ion-col class=\\\"ion-text-center\\\" size= \\\"4\\\">\\n          <ion-text>Partly cloudy</ion-text>\\n    </ion-col>\\n    <ion-col class=\\\"ion-text-center\\\" size= \\\"4\\\">\\n          <ion-text>Wind</ion-text>\\n    </ion-col>\\n    <ion-col class=\\\"ion-text-center\\\" size= \\\"4\\\">\\n          \\n          <ion-text>Temperature</ion-text>\\n     </ion-col>\\n    </ion-row >\\n      <ion-row class=\\\"ion-text-center\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size= \\\"4\\\">\\n          <ion-icon size= \\\"large\\\" name=\\\"partly-sunny-outline\\\"></ion-icon>\\n    </ion-col>\\n    <ion-col class=\\\"ion-text-center\\\" size= \\\"4\\\">\\n        <ion-text>3 m/s</ion-text>\\n    </ion-col>\\n    <ion-col class=\\\"ion-text-center\\\" size= \\\"4\\\">\\n      <ion-text>20°C</ion-text>\\n     </ion-col>\\n    </ion-row>\\n    </ion-grid>\\n   </ion-item>\\n \\n</ion-card>\\n<ion-item lines= \\\"none\\\" class=\\\"ion-item-center\\\">\\n  <!-- <iframe  [src]=\\\"Resorts.urlvideo\\\"  allowfullscreen></iframe> -->\\n  <!-- <iframe  [src]='VideoURL' frameborder=\\\"0\\\"></iframe> -->\\n</ion-item>\\n\\n</ion-content>\\n\\n\\n\";"],"sourceRoot":"webpack:///"}